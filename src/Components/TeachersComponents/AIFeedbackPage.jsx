import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import { Container, Card, Alert, Spinner } from 'react-bootstrap';
import { supabase } from '../../SupabaseAuth/supabaseClient';

const AIFeedbackPage = () => {
  const { examId } = useParams();
  const [feedbackText, setFeedbackText] = useState('');
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const generateFeedback = async () => {
      try {
        setLoading(true);
        setError(null);

        // Fetch questions
        const { data: questions, error: questionsError } = await supabase
          .from('mcq_questions')
          .select('*')
          .eq('exam_id', examId);

        if (questionsError) throw new Error('Failed to fetch questions');

        // Fetch submissions
        const { data: submissions, error: submissionsError } = await supabase
          .from('exam_submission')
          .select('*')
          .eq('exam_id', examId);

        if (submissionsError) throw new Error('Failed to fetch submissions');

        // Construct prompt for AI
        const prompt = `
          Analyze the following exam data and provide feedback for the teacher.

          Questions: ${JSON.stringify(questions, null, 2)}
          Submissions: ${JSON.stringify(submissions, null, 2)}

          Instructions:
          1. Give students score for each question as a percentage.
          example: "Question 1: 75% correct"
          2. Identify the 3 most missed questions and explain why students struggled with them.
          example: "Question 2: Many students struggled with this question because it required understanding of advanced concepts."
          3. Provide teaching suggestions to improve student understanding.
          example: "Consider reviewing the topic of advanced concepts in the next class."
          4. Provide a summary of overall student performance.
          example: "Overall, students performed well on the exam with an average score of 85%. However, there were significant challenges with questions 2 and 5."
                   
          `;
        // Call your backend route that connects to Cohere
        const response = await fetch('http://localhost:5000/api/cohere/generate', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ prompt })
        });

        if (!response.ok) throw new Error('Cohere API call failed');

        const data = await response.json();
        setFeedbackText(data.result?.trim() || 'No feedback generated.');
      } catch (err) {
        setError(err.message);
      } finally {
        setLoading(false);
      }
    };

    generateFeedback();
  }, [examId]);

  if (loading) return (
    <div className="text-center my-5">
      <Spinner animation="border" />
      <p>Generating AI feedback...</p>
    </div>
  );

  if (error) return (
    <Container className="mt-4">
      <Alert variant="danger">
        <strong>Error:</strong> {error}
      </Alert>
    </Container>
  );

  return (
    <Container className="mt-4">
      <Card className="shadow-sm mb-4">
        <Card.Header className="bg-primary text-white">
          <h4>AI-Generated Teaching Feedback</h4>
          <span className="small">Exam ID: {examId}</span>
        </Card.Header>
        <Card.Body>
          <pre style={{ whiteSpace: 'pre-wrap', fontFamily: 'inherit' }}>
            {feedbackText}
          </pre>
        </Card.Body>
      </Card>

      <Alert variant="info">
        <i className="bi bi-robot"></i> Feedback is generated by AI analysis of exam data using Cohere.
      </Alert>
    </Container>
  );
};

export default AIFeedbackPage;
